# Media players install + config
- name: install apt packages
  apt:
    name: "{{ item.name }}"
    install_recommends: "{{ item.install_recommends|default(True) }}"
  with_items: "{{ media.apt_packages }}"

- name: create users
  user:
    name: "{{ item.key }}"
    shell: "{{ item.value.shell }}"
    home: "/home/{{ item.key }}"
  with_dict: "{{ media.users }}"

- name: create directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.user }}"
    state: directory
  with_items:
    - path: "{{ media.directories.ampd }}"
      user: mpd
    - path: "{{ media.directories.navidrome }}"
      user: mpd
    - path: "{{ media.directories.calibre }}"
      user: calibre

- name: install deb packages
  apt: deb={{ item.path }} state=present
  with_items: "{{ media.deb_packages }}"

- name: download java packages
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.path }}"
  with_items: "{{ media.java_packages }}"

- name: Download archived binaries
  ansible.builtin.unarchive:
    src: "{{ item.url }}"
    dest: "{{ item.dest }}"
    remote_src: yes
  with_items: "{{ media.binary_archives }}"

- name: checkout Git libraries
  git:
    repo: "{{ item.repo }}"
    dest: "{{ media.directories[item.directory_key] }}/{{ item.name }}"
    version: "{{ item.version }}"
    force: true
  with_items: "{{ media.python_libraries }}"

- name: install library dependencies
  pip:
    chdir: "{{ media.directories[item.directory_key] }}/{{ item.name }}"
    requirements: requirements.txt
    virtualenv: "{{ media.directories[item.directory_key] }}/{{ item.name }}/venv"
  with_items: "{{ media.python_libraries }}"

- name: install optional dependencies
  pip:
    chdir: "{{ media.directories[item.directory_key] }}/{{ item.name }}"
    requirements: optional-requirements.txt
    virtualenv: "{{ media.directories[item.directory_key] }}/{{ item.name }}/venv"
  with_items:
   - "{{ media.python_libraries }}"

- name: give user library ownership
  command: chown -R {{ item.owner }}:{{ item.owner }}
           {{ media.directories[item.directory_key] }}/{{ item.name }}
  with_items:
    - "{{ media.python_libraries }}"

- name: configure media services
  template:
    src: "{{ item.name }}.j2"
    dest: "{{ item.path }}"
  with_items:
    - name: snapserver.conf
      path: /etc/snapserver.conf
    - name: emby_system.xml
      path: /var/lib/emby/config/system.xml
    - name: mpd.conf
      path: /etc/mpd.conf
    - name: ampd.service
      path: /lib/systemd/system/ampd.service
    - name: calibreweb.service
      path: /lib/systemd/system/calibreweb.service
    - name: navidrome.service
      path: /lib/systemd/system/photoview.service
    - name: photoview.service
      path: /lib/systemd/system/navidrome.service
    - name: navidrome.toml
      path: /opt/navidrome/navidrome.toml
    - name: photoview.env
      path: /opt/photoview/photoview.env

- name: enable systemd services
  systemd:
    state: started
    enabled: true
    name: "{{ item }}"
  with_items:
    - snapserver
    - ampd
    - calibreweb
    - navidrome
    - photoview