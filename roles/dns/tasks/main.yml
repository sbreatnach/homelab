- name: create DNS serving user
  user:
    name: "{{ dns.user }}"
    comment: "DNS serving user"
    home: /home/{{ dns.user }}

- name: download and extract DNS binaries
  unarchive:
    src: "{{ item }}"
    dest: /home/{{ dns.user }}
    remote_src: yes
  with_items: "{{ dns.archives }}"

- name: create directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.user }}"
    state: directory
  with_items:
    - path: "{{ dns.directories.logs }}"
      user: "{{ dns.user }}"

- name: create DNS configurations
  template:
    src: "{{ item.template }}"
    dest: "{{ item.path }}"
  with_items:
    - template: adguard.yaml.j2
      path: /home/{{ dns.user }}/adguard.yaml
    - template: Corefile.j2
      path: /home/{{ dns.user }}/Corefile
    - template: nas.db.j2
      path: /home/{{ dns.user }}/nas.db
    - template: vpn.db.j2
      path: /home/{{ dns.user }}/vpn.db

- name: set filesystem permissions
  shell: chown -R dns:dns /home/dns

- name: create systemd services
  template:
    src: "{{ item.template }}"
    dest: "{{ item.path }}"
  with_items:
    - template: adguard.service.j2
      path: /etc/systemd/system/adguardhome.service
    - template: coredns.service.j2
      path: /etc/systemd/system/coredns.service

- name: enable systemd services
  systemd:
    state: started
    enabled: true
    name: "{{ item }}"
  with_items:
    - coredns
    - adguardhome